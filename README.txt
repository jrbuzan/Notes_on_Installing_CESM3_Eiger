##########################################################
# Created: 
# 15.08.2024
# Created by: jrbuzan
##########################################################

##########################################################
# The objective of the README.txt is to install CESM3
# and execute a case as well as run benchmarks.
##########################################################

##########################################################
# To do so, this requires loading the correct modules,
# modifying the ${USER} .bashrc file, installing PIO then
# ESMF, downloading CESM, adding text to key files in
# CESM, creating special directories in CESM and adding
# files to those directories, modifying .c files, and
# finally building a simulation. Following the successful
# build, benchmarking may proceed.  
##########################################################

##########################################################
# The follow is a guideline with set of order of
# operations. Important to note, these files/scripts are 
# customized to my environment. They paths will need to
# generated by the ${USER}. 
##########################################################

##########################################################
# Rough Order of operations 
# Load modules
##########################################################
modules_load.txt

##########################################################
# Change ${USER} .bashrc
# Remember to use correct paths.
# The PIO/ESMF paths are generated later, and will need
# to be corrected.
##########################################################
things_to_add_to_bashrc.txt

##########################################################
# Build PIO with Intel
# the .sh is an executable. Be sure to check paths.
##########################################################
mypiojonscript_intel.sh

##########################################################
# Build ESMF with Intel
# the .sh is an executable. Be sure to check paths.
##########################################################
myesmfbuild_intel.sh

##########################################################
## GNU? Intel is faster.
# no need to install gnu versions
# the .sh is an executable. Be sure to check paths.
##########################################################
#mypiojonscript_gnu.sh
#myesmfbuild_gnu.sh
##########################################################

##########################################################
# Remember to add paths to your .bashrc
##########################################################

##########################################################
# Download CESM
# read file
##########################################################
download_cesm.txt

##########################################################
# Change directory to your new CESM
##########################################################

##########################################################
# add to configure_batch.xml
PATH:
ccs_config/machines
# read file
##########################################################
add_to_configure_batch.txt

##########################################################
# add to configure_machines.xml
PATH:
ccs_config/machines
# read file
##########################################################
add_to_configure_machines.txt


##########################################################
#Add files to ccs_config/machines/cmake_macros
Add file(s):
# Be sure to check paths.
##########################################################
#gnu_eiger.cmake     ## only necessary if using GNU
intel_eiger.cmake

##########################################################
# create directory and add files
PATH:
ccs_config/machines/eiger
##########################################################
Add file:
# Be sure to check paths.
##########################################################
config_machines.xml

##########################################################
# What should be left should be to change the affinity.c
# Check this file
##########################################################
my_git_diff_list.txt
##########################################################
# CESM had a disagreement with headers/paths, and tried
# to generate its own ID. With how CSCS configured Eiger,
# this is uneccesary. 
# Add the lines in the my_git_diff_list.txt to the 
# affinity.c file. The path is in the file.
##########################################################

##########################################################
# to check your changes
##########################################################
$ git status
$ git diff -U
 
##########################################################
# A list is generated with components with changes.
# cd to those directories and search git again:
##########################################################
$ git diff -U

##########################################################
# This should list the explicit change to files that 
# the ${USER} has made.
# More likely than not, they should reflect the same
# list i have in my_git_diff_list.txt
##########################################################

##########################################################
# Now build a case.
# This script step by step creates a case.
# It is a guideline derived from my experience with 
# executing CESM. YMMV (Your Milage May Vary)
# aka, I suggest customizing this to your style.
##########################################################
daint_cesm2_2_2.jrb.v1.test.sh

##########################################################
# First time users of the build simulation script should
# execute each line individually in the command line.
##########################################################

##########################################################
# If unsuccessful, were all the changes made? What errors
# were produced? The error file should state what compiler
# failed and give a message toward why.
# For example, this is how the affinity.c issue was
# discovered, isolated, and patched. The nice thing 
# about the git nature of CESM3 is that the 
# git status/diff -U commands will inform the ${USER}
# of the changes they made.
##########################################################

##########################################################
# If successful, then modify the .sh file and begin your
# benchmarking adventure. Typically, the format should be 
# something like "doublings" 2x nodes, 4x, 8x, etc. 
# Eiger and the CESM3 resolutions should have strong 
# scaling performance. 
##########################################################

##########################################################
# Good luck on your CESM3 adventure. 
# -Jonathan R. Buzan
# PhD
# Climate and Environmental Physics
# Physics Institute
# Oeschger Centre for Climate Change Research
# and
# Consultant for Wyss Academy for Nature
# University of Bern
# Sidlerstrasse 5
# 3012 Bern, Switzerland
##########################################################

